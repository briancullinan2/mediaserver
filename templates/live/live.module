<?php
include_once dirname(__FILE__) . DIRECTORY_SEPARATOR . 'select.php';
include_once dirname(__FILE__) . DIRECTORY_SEPARATOR . 'users.php';
include_once dirname(__FILE__) . DIRECTORY_SEPARATOR . 'search.php';
include_once dirname(__FILE__) . DIRECTORY_SEPARATOR . 'errors.php';
include_once dirname(__FILE__) . DIRECTORY_SEPARATOR . 'modules.php';
include_once dirname(__FILE__) . DIRECTORY_SEPARATOR . 'menu.php';
include_once dirname(__FILE__) . DIRECTORY_SEPARATOR . 'list.php';

include_once dirname(__FILE__) . DIRECTORY_SEPARATOR . 'header.php';
include_once dirname(__FILE__) . DIRECTORY_SEPARATOR . 'footer.php';

function theme_live_logo()
{
	$result = fetch('http://www.monolithicmedia.org/favicon.ico', array(), array('timeout' => 2));
	if(isset($result['headers']['content-type']))
		header('Content-Type: ' . $result['headers']['content-type']);
	print $result['content'];
}

function theme_live_scripts()
{
	header('Content-Type: text/javascript');
	$scripts = array('js/jquery.js', 'js/jquery-ui.js', 'js/player.js', 'js/playlist.js', 'js/utils.js');
	
	foreach($scripts as $i => $script)
	{
		print file_get_contents(dirname(__FILE__) . DIRECTORY_SEPARATOR . $script);
	}
}

function theme_live_styles()
{
	header('Content-Type: text/css');
	$styles = array('css/types.css', 'css/colors.css', 'css/search.css', 'css/layout.css', 'css/menu.css', 'css/files.css'
		, 'css/errors.css', 'css/forms.css', 'css/footer.css', 'css/select.css', 'css/geshi.css', 'css/highlight.css'
		, 'css/list.css', 'css/file_rename.css', 'css/tag_rename.css'
	);
	
	foreach($styles as $i => $style)
	{
		print file_get_contents(dirname(__FILE__) . DIRECTORY_SEPARATOR . $style);
	}
}

function validate_live($request)
{
	if(!isset($request['dir']))
		$request['dir'] = '/';
	
	if(!isset($request['limit']))
		$request['limit'] = 50;
}

function live_get_scheme()
{
	if(!isset($GLOBALS['output']['file_counts']))
		return 'files';
	
	$scheme_count = 0;
	$scheme = '';
	foreach($GLOBALS['output']['file_counts'] as $key => $count)
	{
		if($count > $scheme_count && $key != 'files_count')
		{
			$scheme_count = $count;
			$scheme = $key;
		}
	}
	if($GLOBALS['output']['file_counts']['files_count'] - $scheme_count > $scheme_count)
		$scheme = 'files_count';
		
	$scheme = substr($scheme, 0, -6);
	
	return $scheme;
}

function live_get_colors()
{
	$color_schemes = array('files', 'audio', 'image', 'video', 'code', 'movies');

	$scheme = live_get_scheme();
	
	if(in_array($scheme, $color_schemes))
		return $scheme;
	else
		return 'files';
}

function live_get_info_count()
{
	$biggest = 0;
	if(!isset($GLOBALS['output']['files'])) return $biggest;
	foreach($GLOBALS['output']['files'] as $file)
	{
		$info_count = 0;
		foreach($GLOBALS['output']['columns'] as $column)
		{
			if(isset($file[$column]) && $file[$column] != '' && strlen($file[$column]) <= 200 &&
				substr($column, -3) != '_id' && $column != 'id' && $column != 'Hex' && $column != 'Filename' && $column != 'Filetype')
			$info_count++;
		}
		
		$info_count = ceil($info_count/2);
		if($info_count > $biggest) $biggest = $info_count;
	}
	
	return $biggest;
}


function live_alter_file($file)
{
	foreach($file as $column => $value)
	{
		if($column == 'Filepath')
		{
			$file['Filepath'] = urlencode_path($file['Filepath']);
		}
		/*elseif(isset($GLOBALS['output']['search_regexp']) && 
			isset($GLOBALS['output']['search_regexp'][$column])
		)
		{
			$file[$column] = preg_replace($GLOBALS['output']['search_regexp'][$column], '\'<strong style="background-color:#990;">\' . htmlspecialchars(\'$0\') . \'</strong>\'', $file[$column]);
		
			continue;
		}*/
		//$file[$column] = preg_replace('/([^ ]{25})/i', '$1<br />', $file[$column]);
		elseif($column == 'Filesize')
			$file['Filesize'] = roundFileSize($file['Filesize']);
		elseif($column == 'Uncompressed')
			$file['Uncompressed'] = roundFileSize($file['Uncompressed']);
		elseif($column == 'Bitrate')
			$file['Bitrate'] = round($file['Bitrate'] / 1000, 1) . ' kbs';
		elseif($column == 'Length')
			$file['Length'] = floor($file['Length'] / 60) . ' minutes ' . floor($file['Length'] % 60) . ' seconds';
	}
	return $file;
}

function theme_live_pages($start = 0, $limit = 50, $total = 0)
{
	// set some variables if they are missing so we can avoid errors
	?>
	<table cellpadding="0" cellspacing="0" class="pageTable">
		<tr>
			<td align="center">
				<table cellpadding="0" cellspacing="0">
					<tr>
						<td>
	<?php
	foreach($GLOBALS['output']['pages'] as $i => $page_link)
	{
		list($name, $href) = $page_link;
		if(isset($page_link[2]) && $page_link[2] == false)
		{
			?>
			<div class="page<?php print (!is_numeric($name) || strlen($name) > 2)?'W':''; ?>">
				<strong><?php print $name; ?></strong>
			</div>
			<?php
		}
		else
		{
			?>
			<div class="page<?php print (!is_numeric($name) || strlen($name) > 2)?'W':''; ?>"><div class="pageHighlight<?php print (!is_numeric($name) || strlen($name) > 2)?'W':''; ?>" style="visibility:hidden"></div>
				<a class="pageLink" href="<?php print url($GLOBALS['output']['get'] . '&' . $href); ?>" onmouseout="this.parentNode.firstChild.style.visibility = 'hidden'; return true;" onmouseover="this.parentNode.firstChild.style.visibility = 'visible'; return true;"><?php print $name; ?></a>
			</div>
			<?php
		}
	}
	?>
	
						</td>
					</tr>
				</table>
			</td>
		</tr>
	</table>
 <?php
}
