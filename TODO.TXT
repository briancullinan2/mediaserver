------------- MONOLITHICMEDIA TODO -------------
Monolithic site is not outputting the htaccess file because it is hidden from the tar command
------------- GENERAL TODO -------------
Come up with a good way to detect modrewrite
Install from scratch until all the errors are gone
Look at drupal and find out if there is a better way to save errors to the session at the end of a script
Add module called balancer used for load balancing
	Basically it allows the administrator to set different conditions for when to use a different subdomain for accessing media
		It will forward the use to the other domain with the exact same request information based on the conditions
	This will allow multiple computers running identical set ups to output files and transcode more efficiently
	Enter username and password for each remote services and download the remote load balancing information to check for conflicts and easy reference
	Maybe this modules could help with hard and soft links?
Install script is severely broken
Add a register script to the install process that allows users to register a username, password, and domain for their site, with the monolithicmedia drupal site.
	Include a key that is unique to every download, to prevent spamming.
Abstract the setup functions, modules should be set up after being loaded to load more dependencies, this is similar to drupal's module.install file
Fix up template settings in core.php core_variables() function
	This should probably be in the template module under always_output()
Current solution for dependencies is not very good, rewrite, possibly call module init whenever handles() is called?
	Checks abstracted into setting_ wrappers, is this the best solution?
	Create a series of dependency_ functions that check for the existance of files and settings
		For example, the database module depends on adodb, but also depends on the settings db_connect and use_database
		Many modules and handlers depend on Archive and getID3()
		Add register functions to handlers
		The 'depends on' field in each module configuration can list functions or modules
			If modules are listed this will determine the order for calling the setup functions
		Handlers can depend on other handlers, this will help with the order to load the classes maybe?
		Create function for sorting the handlers based on parents callable by usort()
		Create function for sorting the modules based on the 'depends on' field
		Denpendency form configurations show up on status page as well as along with the configuration for modules
		If any dependency fails, show an error on admin page
			Only if the module is not manually disabled, this will be tricky to track since they are force disabled if there is a missing dependency
		Handlers are configurable
			Such as db_archive using getid3() or PEAR Archive for parsing out archives
			db_code can use Text_highlighter or geshi, check the settings first then check dependencies for both and if only 1 exists,
				choose that one by default and display warning on dependency instead of fail if neither exist
		In common setup
			load settings
			load all modules
			load all handlers if using a database
			check dependencies
			call setup functions
				This will probably require things like validate_search and the admin modules configure_ be set up in the setup() function
					because they depend on all the other modules and handlers being loaded
		If a dependency fails for a modules, that module is forceably disabled
			Dependency on core is implied
			Same goes for handlers
			This will also disable modules that depend on modules
			Therefore, core should not have any dependencies, but rather settings for using different libraries
	Localroot cannot be changed, this is unnessisary, it should be detected and displayed though
	Try removing all the pieces one at a time to make sure that modules are disabling themselves
		The system should run without PEAR, but anything else that uses PEAR such as libraries are going to fail
	Fix error output for configurations, should also output debug info for dependencies and seperate messages if the module config contains
		something the configuration_() function doesn't or if the configuration function contains something the module config doesn't
Finish setting() function in settings.php plugin
	Settings should also be loadable from the database
Cache all loaded module files in settings database (possibly storing in admin settings and deserializing would be efficient?)
	Save module settings in database
Make validate_return actually validate the return path
Remove all occurances on props['WHERE'] being set to a string
	It should be set to an array from now on, so that we can differentiate between each query_alter_
	Same with all the other variables
Speed testing with new User queries
Store the remote_address in the session, and if it doesn't match up with what is in the session then kill the session and die
Create a unique id and insert it into forms, this is required when the form is submitted
Make hard links and soft links, hard links are replaced when they are put in to the database, soft links are replaced when they are read from the database, this will allow us to do more network stuff
------------- MEDIA MODULES -------------
Search module could be configured to use a different algorithm for searching, possibly an external site 
	like Google could display results or one of those cool database searching services that cost money
Add 'guess' parameter to list module to allow randomly selected files from the same genre
Add 'long_play' option to encode so instead of inputting a file to vlc, the system inputs a playlist and devices only have to buffer once and no more breaks
Finish ampache.php module to support genres, videos, and playlists
More compatibility testing with clients
Interface with mediatomb and support UPnP protocol
Test and find a fix for some media dropping off the network
	Check to see if the file exists in the archive handler before trying to analyze it
------------- LANGUAGE MODULE -------------
Start implementing lang() calls
	If the page has language variables that are not known
		Call the index page with lang_only which runs through the entire identical request and gets all the lang calls
		Generate a query to the google api to translate using multiple q variables
		Similar to how errors are handled()?
		Save the translations
	Fix where to save translations
	Fix up lang calls, accept multiple parameters and don't translate certain fields,
		this will allow us to insert things like file paths in the middle of the sentence
	the default Google AJAX functionality can be used for translations that are not found
		Or the default output for text that doesn't have a translation could be the English text with an AJAX query attached
			to call the server again for the translations after the page is fully loaded
	Consider translating the pages with special keys surrounding the text and using the default google translate and somehow
		submitting the translations back to the server for caching
		Or pulling out the translations for later use
------------- BITTORRENT MODULE -------------
bt module should have a configurable ctorrent settings that uses %IF for the torrent file to start seeding server side
	Should also check dependencies for bttracker and ctorrent
Check for bt module in install.php script
Add bttracker install script to admin/install.php to fully bootstrap the install process
------------- ADMIN TOOLS -------------
Create a status admin tool
Port all Jamu stuff from MythTV to PHP admin tools
Finish fixing up modules to use new API
	admin tools section
Work on tools.php module for admin
	Provide useful information in tools section about missing songs (music.php tool?)
Add netflix movie checker to admin tools
Add show renamer to admin tools
------------- Module TODO -------------
Finish users.php module
Work on settings.php module
	Global settings such as default template to use for each device logged in the to account
	Template settings, must provide specification in template config, use database for storing fields?
Make a sync module in admin section for syncing between two databases and pulling out differences
	Use musicbrainz to sync music
FIX bt.php module to work with command line torrent seeder on windows
Set up conditions for when the streams are used based on if %OF and %IF are used in the command arguments
Get ranges working in encode module
	only allow the option if the argument can read from stdin and read the input from the handler and write it to the input stream
Figure out a way of doing this with files even if stdin is not being used in the command, if fopen is writing to a file, does it file feof when reading from the same file simulaneously?
Make convert.php module recognize video thumbnails and use vlc to extract them
------------- Handler TODO -------------
Make a discography handler that parses out wikipedia discographys, store album information, and return links to Full Discography, and Partial Discography
	Base discography handler on discogs.com
	this will list out each artist with full or missing albums
	It handles artists, when an album count changes or doesn't exist it updates the database
Work on playlist handler, use hard links to help find files
Make a fs_code handler
Work on db_movies, use cUrl to download movie information from imdb, use the volume decriptor for lookup, this shouldn't change even if they edited an image
	Look up movies on amazon, and see if that will help with searching IMDb
	Research the video_ts.ifo file, there must be a way of getting the full name from a DVD image, windows media center projects can do it, so can we
------------- All Template TODO -------------
HIGH-PRIORITY: Check all usage of setting(local_template), setting(local_base), setting(html_template)
	Templates should refer to themselves only
	Templates should have functions for outputting their own files instead of using the file output stream in the output_template() function, make this obsolete
	Never include path in template reference, the validate_ function always removes the path
Set variables to default specified by template if they are not set because of an improper input
Figure out how template_path and modules_path is used in the javascript in the WMP and EXT JS templates
Test modifications to extjs and wmp template script and link includes
Finish mobile template.
Finish Ampache XML API template
Work on finishing EXT JS template, and add more templates from Ampache, Jinzora, Subsonic, and WinAmp Remote
------------- DEFAULT -------------
Add podcast list template
Work on default template, give fancy options like
	Space evenly which does the spacing and
	Use tables, which puts results in a table, and 
	Use Javascript which selects item with javascript instead of forms
	FIX detail options in default template
------------- EXT JS -------------
Fix arrow-key movement in extjs template, in thumbnails view of the FolderView.js
Add desktop.ini/folder.ini files and fix up thumbnails in FolderView.js
Fix initial load time in FolderView.js
Work on category view/show in groups in FolderView.js, add items that take up whole line and have headers
Fix tooltip popup in FolderView.js, in wrong panel maybe?
Press letter on the keyboard to go to that folder in FolderView.js and select.php
Change desktop style to be buttons like folders in Desktop.js but render buttons to index.html
Get settings dialog working and set up user accounts to control it
Finish the player app that displays pictures
Make players resize to Player window
------------- LIVE -------------
Fix javascript select and right click in all browsers
Fix appearance in IE and Chrome
	In IE the search box is messed up again, whitespace?
	Chrome, the module list doesn't wrap, whitespace:nowrap?