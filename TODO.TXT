------------- MONOLITHICMEDIA TODO -------------
------------- GENERAL TODO -------------
add speech recognition: https://github.com/taf2/speech2text/blob/master/lib/speech/audio_to_text.rb
Write a Grooveshark module
Fix balancer to work with any server, and rename it to "Connector" or something and sync transactions between servers
Improve time added API to help with connector
Redo user permissions to be group based defined in the configuration, allow for function calls in privilage setting in info files as well as group names
Fix directory counting and deep select option, it is still doing it even when it is turned off
Fix CLI
Fix Live Javascript and use address.push API implemented in Safari and Firefox
Redirect user to the last inneronly adddress they used, do this is a hook in the Live template only
Fix Live window title not changing after page change
Improve performance by caching the module list, this should refresh if a dependency is not met
Use NZBGetter: 
	http://sourceforge.net/projects/nzbgetter/
MULTIPLE FIXES!
	is_module() should check dependecy()?
		use search for is_module() to figure this out
Support GD graphics
Add authentication API that allows modifying of login
	This will enable stuff like AD authentication, auth_pam for php and linux, basic auth
	if ($_SERVER['PHP_AUTH_USER'] == "") {
            header('WWW-Authenticate: Basic realm="site.com Admin"');
            header('HTTP/1.0 401 Unauthorized');
            $error =  "Sorry you are not authorized";                        
	mod_auth_kerb or http://php.net/manual/en/book.w32api.php or http://www.php.net/manual/en/book.com.php for Windows authentication
Completely REDO API for permissions, it currently sucks, should be more like Drupal
	This will make interacting with CLI module easier
Add sitewatch as a setting to enable the link and logo in the templates
Fix watched list
	Cannot remove watch entries because it's not implemented in watched.module
	This functionality is also needed in balancer.module
Should be able to look at a login form and extract the username, password and captcha using levenshtien so save along with the image in the settings
Admin tools should provide an API and theme for tools to generate command line scripts
	Maybe this should be included in CLI instead, so commands can be executed by tools
Make different views for files, details view which displays a bunch of information
	Integrate this in to the music management tool
For non-jquery templates, an I-Frame could be used to perform the request and print out the template
	on the CLI, the request could be made by the template, similar to the logo fetching and the ascii would be printed out
	this may take too long, and maybe an API should be created in the tool output for performing all long-scripts sequentially
		this would replace the singular functionality
Add dependencies to live theme (jquery, flowplayer) and decide if these should be included in the theme package
Rate limiting on user login, recaptcha module
Finish webdav module that allows files to be uploaded and access using the web dav protocol.  This is already mostly supported by PEAR.
Add module called balancer used for load balancing
	Maybe this modules could help with hard and soft links?
	Make sure remote balancer is enabled and dependencies are met, add a status print out to the output function of balancer
	The depends on for balancer should take in to account the session setup
		Redirection based on percentage will not be possible if it cannot count the sessions\
		If a database is set up load that first and use that for session comparing
Install script is severely broken
	just show general options and modules with unmet dependencies so the user can see what to resolve
Add a register script to the install process that allows users to register a username, password, and domain for their site, with the monolithicmedia drupal site.
	Include a key that is unique to every download, to prevent spamming.
Store the remote_address in the session, and if it doesn't match up with what is in the session then kill the session and die
Create a unique id and insert it into forms, this is required when the form is submitted
Make hard links and soft links, hard links are replaced when they are put in to the database, soft links are replaced when they are read from the database, this will allow us to do more network stuff
------------- MEDIA MODULES -------------
Use beatport API
	Youtube video search
Search module could be configured to use a different algorithm for searching, possibly an external site 
	like Google could display results or one of those cool database searching services that cost money
Add 'guess' parameter to list module to allow randomly selected files from the same genre
Add 'long_play' option to encode so instead of inputting a file to vlc, the system inputs a playlist and devices only have to buffer once and no more breaks
Finish ampache.php module to support genres, videos, and playlists
More compatibility testing with clients
Interface with mediatomb and support UPnP protocol
Test and find a fix for some media dropping off the network
	Check to see if the file exists in the archive handler before trying to analyze it
Set up conditions for when the streams are used based on if %OF and %IF are used in the command arguments
	Verify these settings in the status for encode and convert
Add support for encode and convert to be configured based on individual file extensions
Get ranges working in encode module
	only allow the option if the argument can read from stdin and read the input from the handler and write it to the input stream
Figure out a way of doing this with files even if stdin is not being used in the command, if fopen is writing to a file, does it file feof when reading from the same file simulaneously?
Make convert.php module recognize video thumbnails and use vlc to extract them
------------- LANGUAGE MODULE -------------
Start implementing lang() calls
	If the page has language variables that are not known
		Call the index page with lang_only which runs through the entire identical request and gets all the lang calls
		Generate a query to the google api to translate using multiple q variables
		Similar to how errors are handled()?
		Save the translations
	Fix where to save translations
	Fix up lang calls, accept multiple parameters and don't translate certain fields,
		this will allow us to insert things like file paths in the middle of the sentence
	the default Google AJAX functionality can be used for translations that are not found
		Or the default output for text that doesn't have a translation could be the English text with an AJAX query attached
			to call the server again for the translations after the page is fully loaded
	Consider translating the pages with special keys surrounding the text and using the default google translate and somehow
		submitting the translations back to the server for caching
		Or pulling out the translations for later use
------------- BITTORRENT MODULE -------------
FIX bt.php module to work with command line torrent seeder on Windows
bt module should have a configurable ctorrent settings that uses %IF for the torrent file to start seeding server side
	Should also check dependencies for bttracker and ctorrent
Check for bt module in install.php script
Add bttracker install script to admin/install.php to fully bootstrap the install process
------------- ADMIN TOOLS -------------
Finish CLI module
	How about a nifty little remote RPC admin tool or a debug tool
Make a movie services tool that allows you to check vudu and netflix and block buster for movies
Make a tv services tool that allows you to use myepisodes and hulu
Allow ranking of all available services
Port all Jamu stuff from MythTV to PHP admin tools
Work on music tool
Add show renamer to admin tools
Make a sync module in admin section for syncing between two databases and pulling out differences
	Use musicbrainz to sync music
Fix tools that use services cannot post forms because services that require extra input have username and password field
	These should be renamed to correlate with a specific service configuration
------------- Module TODO -------------
Finish users.php module
Work on settings.php module
	Global settings such as default template to use for each device logged in the to account
	Template settings, must provide specification in template config, use database for storing fields?
------------- Handler TODO -------------
Work on playlist handler, use hard links to help find files
------------- All Template TODO -------------
Templates should have functions for outputting their own files instead of using the file output stream in the output_template() function, make this obsolete
Never include path in template reference, the validate_ function always removes the path
Set variables to default specified by template if they are not set because of an improper input
Figure out how template_path and modules_path is used in the javascript in the WMP and EXT JS templates
Test modifications to extjs and wmp template script and link includes
Finish mobile template.
Finish Ampache XML API template
Implement a GrooveShark clone template
Work on finishing EXT JS template, and add more templates from Ampache, Jinzora, Subsonic, and WinAmp Remote
------------- DEFAULT -------------
Add podcast list template
Work on default template, give fancy options like
	Space evenly which does the spacing and
	Use tables, which puts results in a table, and 
	Use Javascript which selects item with javascript instead of forms
	FIX detail options in default template
------------- EXT JS -------------
Fix arrow-key movement in extjs template, in thumbnails view of the FolderView.js
Add desktop.ini/folder.ini files and fix up thumbnails in FolderView.js
Fix initial load time in FolderView.js
Work on category view/show in groups in FolderView.js, add items that take up whole line and have headers
Fix tooltip popup in FolderView.js, in wrong panel maybe?
Press letter on the keyboard to go to that folder in FolderView.js and select.php
Change desktop style to be buttons like folders in Desktop.js but render buttons to index.html
Get settings dialog working and set up user accounts to control it
Finish the player app that displays pictures
Make players resize to Player window
------------- LIVE -------------
AJAX isn't working great
Make watched module add entries using ajax and color code each entry based on if it is ignored or watched or an invalid directory
	This should use alter_form API
Add jquery lists and allow rearranging on the services and balancer configuration
