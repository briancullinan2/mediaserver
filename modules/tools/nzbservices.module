<?php

function setting_download_services_nzbservices()
{
	return array('nzbservice_0', 'nzbservice_1');
}

function setting_nzbservice_0($settings)
{
	return array(
		'name' => 'NZB Matrix',
		'match' => '/<a href="(http:\/\/nzbmatrix.com\/nzb-download.php?[^"]*?&amp;nozip=1)"/i',
		'search' => 'http://nzbmatrix.com/nzb-search.php?search=%s',
		'login' => 'http://nzbmatrix.com/account-login.php',
		'loginfail' => '/Access Denied:|<form method="post" action="account-login.php">/i'
	);
}

function setting_nzbservice_1($settings)
{
	return array(
		'name' => 'Newzbin',
		'match' => '/<a.*?href="(\/browse\/post\/[0-9]*?\/nzb)">/i',
		'search' => 'http://www.newzbin.com/search/query/?searchaction=Go&q=%s',
		'login' => 'http://www.newzbin.com/account/login/',
		'loginfail' => '/<span>Error:<\/span>/i',
	);
}

/**
 * Implementation of setting
 * @ingroup setting
 */
function setting_nzbpath($settings)
{
	if(isset($settings['nzbpath']) && is_dir($settings['nzbpath']))
	{
		if(substr($settings['nzbpath'], -strlen(DIRECTORY_SEPARATOR)) != DIRECTORY_SEPARATOR) 
			$settings['nzbpath'] .= DIRECTORY_SEPARATOR;
		return $settings['nzbpath'];
	}
	else
		return '';
}

/**
 * Implementation of configure
 * @ingroup configure
 */
function configure_nzbservices($settings)
{
	$settings['nzbpath'] = setting('nzbpath');
	
	$options = array();
	
	if($settings['nzbpath'] == '' || is_writable($settings['nzbpath']))
	{
		$options['setting_nzbpath'] = array(
			'name' => 'NZB Save path',
			'status' => '',
			'description' => array(
				'list' => array(
					'Select a path to save the NZB files to.',
					'Some NZB download programs such as SABnzbd or NewzLeecher can automatically search a directory for new NZB files.'
				),
			),
			'type' => 'text',
			'value' => $settings['nzbpath'],
		);
	}
	else
	{
		$options['setting_nzbpath'] = array(
			'name' => 'NZB Save path',
			'status' => 'fail',
			'description' => array(
				'list' => array(
					'The selected path is not writable!',
					'Select a path to save the NZB files to.',
					'Some NZB download programs such as SABnzbd or NewzLeecher can automatically search a directory for new NZB files.'
				),
			),
			'type' => 'text',
			'value' => $settings['nzbpath'],
		);
	}
	
	return array('nzbservices' => array(
		'name' => 'News Group Services',
		'type' => 'fieldset',
		'options' => $options
	));
}

/**
 * Helper function for performing searches and downloading NZBs
 * @param search the query to perform the search
 * @return a status indicating if the file has been downloaded successfully
 */
function nzbservices_search_nzb($search)
{
	// construct search arguments
	$args = func_get_args();
	
	$services = setting('all_nzbservices');
	
	// loop through NZB services until we find the show
	foreach($services as $i => $config)
	{
		// run query
		$result = fetch(call_user_func_array('sprintf', array_merge(array($config['search']), $args)), array(), array(), session('nzbservices_' . $i));
		
		// match nzbs
		$count = preg_match_all($config['match'], $result['content'], $matches);
		
		if($count > 0)
		{
			return nzbservices_fetch_nzb($matches[1][0], session('nzbservices_' . $i));
		}
	}
	
	return false;
}

/**
 * Helper function for retrieving nzb files
 * @return true if the file was saved, -1 if there was an error saving the file
 */
function nzbservices_fetch_nzb($file, $cookies, $filename = '')
{
	// download and save
	$result = fetch($file, array(), array(), $cookies);
	
	// get the save path
	$path = setting('nzbpath');
	if(substr($path, -1) != '/') $path .= '/';
	
	// try creating a file name based on what is reported in the headers
	if($filename == '' && 
		isset($result['headers']['Content-disposition']) && 
		strpos($result['headers']['Content-disposition'], 'filename=') !== false)
	{
		$start = strpos($result['headers']['Content-disposition'], 'filename=') + 9;
		$filename = substr($result['headers']['Content-disposition'], $start);
		if($filename[0] == '"') $filename = trim(substr($filename, 1));
		if($filename[strlen($filename)-1] == '"') $filename = trim(substr($filename, 0, -1));
	}
	// try creating the filename based on the name in the link
	if($filename == '' && strrpos($file, '.') > strrpos($file, '/'))
	{
		$filename = basename($file);
	}
	// if all else fails, make something up
	if($filename == '')
	{
		$filename = 'selected_' . time() . '.nzb';
	}
	
	// add filename to save path
	$path .= $filename;
	
	// save the file
	if($fh = fopen($path, 'w'))
	{
		fwrite($fh, $result['content']);
		fclose($fh);
		
		return true;
	}
	else
		return -1;
}
