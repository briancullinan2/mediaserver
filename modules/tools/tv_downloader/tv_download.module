<?php

function menu_tv_download()
{
	return array(
		'admin/tools/television/downloader' => array(
			'callback' => 'output_tv_download',
		),
		'admin/tools/television/downloader/login/%login_index' => array(
			'callback' => 'output_tv_download_login'
		),
		'admin/tools/television/downloader/%info_singular_step_television' => array(
			'callback' => 'output_tv_download_singular'
		),
		'admin/tools/mustelevisionic/downloader/search/%service_index' => array(
			'callback' => 'output_music_download_manual'
		),
	);
}

/**
 * Set up the list of settings
 * @ingroup setup
 */
function setup_tv_download()
{
	require_once dirname(__FILE__) . DIRECTORY_SEPARATOR . 'tvdl.singular.inc';
	require_once dirname(__FILE__) . DIRECTORY_SEPARATOR . 'myepisodes.inc';
}

/**
 * Implementation of validate
 * @ingroup validate
 */
function validate_episode($request)
{
	return generic_validate_numeric($request, 'episode');
}

/**
 * Implementation of validate
 * @ingroup validate
 */
function validate_season($request)
{
	return generic_validate_numeric($request, 'season');
}

/**
 * Implementation of validate
 * @ingroup validate
 */
function validate_show_index($request)
{
	return generic_validate_numeric($request, 'show_index');
}

/**
 * Implementation of validate
 * @ingroup validate
 */
function validate_showname($request)
{
	return generic_validate_all_safe($request, 'showname');
}

/**
 * Implementation of validate
 * @ingroup validate
 */
function validate_show_status($request)
{
	if(isset($request['show_status']) && $request['show_status'] != '' && preg_match('/^[a-z0-9-]*$/i', $request['show_status']) != 0)
		return $request['show_status'];
}
	
/**
 * Implementation of configure
 * @ingroup configure
 */
function configure_tv_download($settings)
{
	$settings['myepisodes'] = setting('myepisodes');
	
	$options = array();
	
	$feeds = array();
	
	$feeds['myepisodes'] = array(
		'name' => 'My Episodes Account',
		'status' => '',
		'description' => array(
			'list' => array(
				'Enter your MyEpisodes.com username and password to download the list of your selected TV Shows.',
			),
		),
		'type' => 'set',
		'options' => array(
			'setting_myepisodes[username]' => array(
				'type' => 'text',
				'name' => 'Username',
				'value' => $settings['myepisodes']['username'],
			),
			'setting_myepisodes[password]' => array(
				'type' => 'text',
				'name' => 'Password',
				'value' => $settings['myepisodes']['password'],
			),
		),
	);
	
	$options['tv_input'] = array(
		'name' => 'TV Show Input',
		'type' => 'fieldset',
		'options' => $feeds
	);
	
	return $options;
}

/**
 * Implementation of output
 * @ingroup output
 */
function output_tv_download($request)
{
	// output configuration link
	raise_error(array(
		'You may need to ',
		'link' => array(
			'url' => 'admin/module/tv_download',
			'text' => 'configure'
		),
		' this tool in order to use it properly.'
	), E_WARN);

	// perform television downloading
	$infos = get_download_services_login(NULL, 'admin/tools/television/downloader/login/');
	
	// output info
	register_output_vars('infos', array(
		'tv_downloader' => array(
			'name' => 'TV Downloader',
			'type' => 'fieldset',
			'options' => $infos
		),
	));
	
	theme('tool_info');
}

/**
 * Helper function for performing searches and downloading NZBs
 * @param showname the name of the show to search for
 * @param season the season number
 * @param episode the episode number
 * @return a status indicating if the file has been downloaded successfully
 */
function television_fetch_show($showname, $season, $episode)
{
	
	$services = setting('all_download_services', 'television');
	
	// loop through NZB services until we find the show
	foreach($services as $i => $config)
	{
		if($config['search'] != '')
		{
			// run query, using television search strings
			$result = fetch(sprintf($config['search'] , urlencode($showname), urlencode($season), urlencode($episode)), array(), array(), session('download_services_' . $i));
			
			// match nzbs
			$count = preg_match_all($config['match'], $result['content'], $matches);
			
print_r($config);
print_r($matches);
			if($count > 0)
			{
				if(($address = generic_validate_hostname(array('address' => $matches[1][0]), 'address')))
					$file = $matches[1][0];
				else
				{
					if(($address = generic_validate_hostname(array('address' => $config['search']), 'address')))
						$file = $address . '/' . $matches[1][0];
					else
						$file = $matches[1][0];
				}
					
				// download and save
				$result = fetch($file, array(), array(), session('download_services_' . $i));

				if(strlen($result['content']) == 0)
					return false;
				
				$path = $config['savepath'] . television_rename_show($showname, $season, $episode, $result['headers']);
	
				if(($fh = fopen($path, 'w')))
				{
					fwrite($fh, $result['content']);
					fclose($fh);
					
					return $path;
				}
				else
					return -1;
			}
		}
	}
	
	return false;
}

function television_rename_show($showname, $season, $episode, $headers)
{
	if(!($filename = get_filename($headers)))
		$filename = $showname . ' Season ' . $season . ' Episode ' . $episode . '.nzb';

	return $filename;
}
