<?php

function setting_download_services_torservices()
{
	return array('torservice_0', 'torservice_1', 'torservice_2', 'torservice_3');
}

function setting_torservice_0($settings, $type = NULL)
{
	$service = array(
		'name' => 'What.CD',
		'match' => 'torservices_what_match',
		'search' => '',
		'login' => 'http://what.cd/login.php',
		'loginfail' => '/<span class="warning">/i',
		'exclude' => 'keeplogged',
		'savepath' => setting('torpath'),
	);
	
	if($type == 'audio')
		$service['search'] = 'http://what.cd/torrents.php?searchstr=%s';
	
	if(isset($settings['torservice_0']))
		$settings['torservice_0'] = array_merge($settings['torservice_0'], $service);
		
	return setting_download_service($settings, 'torservice_0');
}

function torservices_what_match($content)
{
	$matches = array(
		'urls' => array(),
		'titles' => array(),
	);
	
	$group_count = preg_match_all('/<tr class="group">[\s\S]*?<td colspan="2">[\s\S]*?>(?<title>.*?)<span[\s\S]*?<\/tr>([\s]*<tr class="group_torrent[\s\S]*?<\/tr>)*/i', $content, $groups);
	
	if($group_count)
	{
		foreach($groups[0] as $i => $group)
		{
			$torrent_count = preg_match_all('/<a href="(?<url>torrents\.php\?action=download[^"]*)[\s\S]*?<a href="torrents\.php\?[^>]*>(?<format>[^\/]*\/[^\/]*)/i', $group, $torrents);
			if($torrent_count)
			{
				foreach($torrents['url'] as $j => $link)
				{
					$matches['urls'][] = $link;
					$matches['titles'][] = preg_replace('/<\/?[a-z][a-z0-9]*[^<>]*>/i', '', trim($groups['title'][$i])) . ' (' . trim($torrents['format'][$j]) . ')';
				}
			}
		}
	}

	return $matches;
}

function setting_torservice_1($settings, $type = NULL)
{
	$service = array(
		'name' => 'Waffles.FM',
		'match' => '/<a href="(\/download.php\/[^"]*?)"/i',
		'match_title' => '/<a href="#"><\/a><a href="\/details.php[^>]*?>(.*?)<\/a>/i',
		'search' => '',
		'login' => 'https://www.waffles.fm/w/index.php?title=Special%3AUserLogin&returnto=Main_Page',
		'userfield' => 'wpName',
		'passfield' => 'wpPassword',
		'loginfail' => '/<h2>Login error<\/h2>/i',
		'exclude' => 'wpMailmypassword,autoLogout,useSSL',
		'savepath' => setting('torpath'),
	);
	
	if($type == 'audio')
		$service['search'] = 'https://www.waffles.fm/browse.php?q=%s';
	
	if(isset($settings['torservice_1']))
		$settings['torservice_1'] = array_merge($settings['torservice_1'], $service);
	
	return setting_download_service($settings, 'torservice_1');
}

function setting_torservice_2($settings, $type = NULL)
{
	$service = array(
		'name' => 'TvTorrents',
		'match' => '/<a href="" onclick="return loadTorrent\(\'([^\']*?)\'/i',
		'search' => '',
		'login' => 'http://tvtorrents.com/',
		'loginfail' => '/<font class="error">/i',
		'exclude' => 'cookie',
		'savepath' => setting('torpath'),
	);
	
	if($type == 'television')
		$service['search'] = 'http://tvtorrents.com/loggedin/search.do?search=%s+%d+%02d';
	
	if(isset($settings['torservice_2']))
		$settings['torservice_2'] = array_merge($settings['torservice_2'], $service);
		
	return setting_download_service($settings, 'torservice_2');
}

function setting_torservice_3($settings, $type = NULL)
{
	$service = array(
		'name' => 'TheDvdClub',
		'match' => '/<a id="hltorrent9546" href="([^"]*)"/i',
		'search' => '',
		'login' => 'http://thedvdclub.org/login.php',
		'loginfail' => '/color="?red"?[^>]*?>Error:/i',
		'include' => '/<img[^>]*?src=([\'"]?)([^\1]*?)\1[^>]*?>/i/<img src="http://thedvdclub.org/$2">/',
		'savepath' => setting('torpath'),
	);
	
	if($type == 'movies')
		$service['search'] = 'http://thedvdclub.org/browse.php?search=%s&cat=0&blah=0&incldead=1';
	
	if(isset($settings['torservice_3']))
		$settings['torservice_3'] = array_merge($settings['torservice_3'], $service);
		
	return setting_download_service($settings, 'torservice_3');
}

function setting_torservice_4($settings, $type = NULL)
{
	$service = array(
		'name' => 'Demonoid.ME',
		'match' => '/<a href="(\/files\/download\/[^"]*)"/i',
		'search' => 'http://www.demonoid.me/files/?query=%s',
		'login' => 'https://www.demonoid.me/account_handler.php',
		'loginfail' => '/<font class="red"><b>Error:/i',
		'savepath' => setting('torpath'),
	);
	
	if($type == 'movies')
		$service['search'] = 'http://www.demonoid.me/files/?query=%s&category=1';
	elseif($type == 'audio')
		$service['search'] = 'http://www.demonoid.me/files/?query=%s&category=2';
	elseif($type == 'television')
		$service['search'] = 'http://www.demonoid.me/files/?query=%s+%d+%d&category=3';
	
	if(isset($settings['torservice_4']))
		$settings['torservice_4'] = array_merge($settings['torservice_4'], $service);
		
	return setting_download_service($settings, 'torservice_4');
}

/**
 * Implementation of setting
 * @ingroup setting
 */
function setting_torpath($settings)
{
	if(($settings['torpath'] = generic_validate_dir($settings, 'torpath')) && is_writable($settings['torpath']))
		return $settings['torpath'];
	else
		return setting('tmp_dir');
}
	
/**
 * Implementation of configure
 * @ingroup configure
 */
function configure_torservices($settings)
{
	$settings['torpath'] = setting('torpath');
	
	$options = array();
	
	if($settings['torpath'] == '' || is_writable($settings['torpath']))
	{
		$options['setting_torpath'] = array(
			'name' => 'Torrent Save path',
			'status' => 'pass',
			'description' => array(
				'list' => array(
					'Select a path to save the torrent files to.',
					'Some torrent clients such as uTorrent can automatically search a directory for new torrent files.'
				),
			),
			'type' => 'text',
			'value' => $settings['torpath'],
		);
	}
	else
	{
		$options['setting_torpath'] = array(
			'name' => 'Torrent Save path',
			'status' => 'fail',
			'description' => array(
				'list' => array(
					'The selected path is not writable!',
					'Select a path to save the torrent files to.',
					'Some torrent clients such as uTorrent can automatically search a directory for new torrent files.'
				),
			),
			'type' => 'text',
			'value' => $settings['torpath'],
		);
	}
	
	$options = array_merge(configure_services(all_services_module('torservices')), $options);
	
	return array('torservices' => array(
		'name' => 'Torrenting Services',
		'type' => 'fieldset',
		'options' => $options
	));
}
